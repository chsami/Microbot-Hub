name: Development Build

on:
  push:
    branches: [ development ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'
          cache: gradle

      - name: Grant execute permissions to gradlew
        run: chmod +x gradlew

      - name: Build JARs
        run: ./gradlew clean build -x publish

      - name: Configure Git for Actions
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Update plugin documentation
        run: |
          ./gradlew copyPluginDocs
          
          if git diff --quiet public/docs/ -- ':!public/docs/plugins.json'; then
            echo "✅ No changes to plugin documentation"
          else
            echo "📝 Plugin documentation updated"
            
            echo "Documentation files changed:"
            git diff --name-only public/docs/ | grep -v "plugins.json" || true
            
            git add public/docs/
            git reset public/docs/plugins.json 2>/dev/null || true
            git commit -m "chore(ci): Update plugin documentation from GitHub Actions [skip ci]"
            git push
          fi

      - name: Update plugins.json
        run: |
          ./gradlew generatePluginsJson
          
          if git diff --quiet public/docs/plugins.json; then
            echo "✅ No changes to plugins.json"
          else
            echo "🔢 plugins.json updated from GitHub Actions build"
            
            echo "Changed plugins:"
            git diff public/docs/plugins.json | grep -A 1 -B 1 '"sha256"' | grep -E '(internalName|sha256)' | sed 's/^[+-]//' | paste - - | awk -F'"' '{print "  " $4 ": " $12}' || true
            
            git add public/docs/plugins.json
            git commit -m "chore(ci): Update plugins.json from GitHub Actions [skip ci]"
            git push
          fi

      - name: Create GitHub Release with JARs
        uses: ncipollo/release-action@v1
        with:
          tag: release-${{ github.run_number }}
          name: "Development Build #${{ github.run_number }}"
          body: "Commit: ${{ github.sha }}"
          allowUpdates: false
          artifacts: "**/build/libs/*.jar"